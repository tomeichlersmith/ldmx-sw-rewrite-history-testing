#!/bin/sh
#
# do history filtering on ldmx-sw
# assumes git-filter-repo is installed

set -o nounset
set -o errexit

git -C G4DarkBreM.git filter-repo \
  --prune-empty never \
  --sensitive-data-removal \
  --invert-paths \
  --path-glob '**.ipynb' \
  --path-glob '**.csv.gz'
cp G4DarkBreM.git/filter-repo/commit-map G4DarkBreM-commit-map

git -C ldmx-sw.git filter-repo \
  --sensitive-data-removal \
  --invert-paths \
  --path-glob '**/gold.root' \
  --path-glob '**/gold.log' \
  --path-glob 'data/**.pkl' \
  --path-glob 'data/**.tar.gz' \
  --path-glob 'Configuration/data/**.pkl' \
  --path-glob 'Configuration/data/**.tar.gz' \
  --path-glob 'Ecal/data/**.pkl' \
  --path-glob 'Ecal/data/**.tar.gz' \
  --path-glob 'docs/html/**' \
  --path-glob '**.ipynb' \
  --path-glob '**/catch.hpp' \
  --path-glob '**.root' \
  --path-glob '**.json' \
  --path-glob '**.lhe' \
  --path-glob 'EventDisplay/ldmx-vis/**.xml' \
  --path-glob 'EventDisplay/ldmx-vis/**.gz' \
  --commit-callback '
  for change in commit.file_changes:
    if change.filename == b"SimCore/G4DarkBreM":
      with open("../G4DarkBreM-commit-map") as cm:
          for line in cm:
              old, new = tuple(s.encode() for s in line.strip().split())
              if change.blob_id == old:
                  if new == b"0000000000000000000000000000000000000000":
                      print(old, commit, "points to null blob")
                  change.blob_id = new 
                  return commit
  '
cp ldmx-sw.git/filter-repo/commit-map ldmx-sw-commit-map
